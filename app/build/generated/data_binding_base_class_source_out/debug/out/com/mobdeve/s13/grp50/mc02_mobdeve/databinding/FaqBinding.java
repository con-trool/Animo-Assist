// Generated by view binder compiler. Do not edit!
package com.mobdeve.s13.grp50.mc02_mobdeve.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mobdeve.s13.grp50.mc02_mobdeve.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FaqBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView txtAnswer;

  @NonNull
  public final TextView txtQuestion;

  private FaqBinding(@NonNull ConstraintLayout rootView, @NonNull TextView txtAnswer,
      @NonNull TextView txtQuestion) {
    this.rootView = rootView;
    this.txtAnswer = txtAnswer;
    this.txtQuestion = txtQuestion;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FaqBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FaqBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.faq, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FaqBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.txtAnswer;
      TextView txtAnswer = ViewBindings.findChildViewById(rootView, id);
      if (txtAnswer == null) {
        break missingId;
      }

      id = R.id.txtQuestion;
      TextView txtQuestion = ViewBindings.findChildViewById(rootView, id);
      if (txtQuestion == null) {
        break missingId;
      }

      return new FaqBinding((ConstraintLayout) rootView, txtAnswer, txtQuestion);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
